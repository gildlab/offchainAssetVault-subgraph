/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TwoPriceOracle,
  TwoPriceOracleInterface,
  TwoPriceOracleConfigStruct,
} from "../../../../contracts/oracle/price/TwoPriceOracle";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "base",
            type: "address",
          },
          {
            internalType: "address",
            name: "quote",
            type: "address",
          },
        ],
        internalType: "struct TwoPriceOracleConfig",
        name: "config_",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "base",
            type: "address",
          },
          {
            internalType: "address",
            name: "quote",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct TwoPriceOracleConfig",
        name: "config",
        type: "tuple",
      },
    ],
    name: "Construction",
    type: "event",
  },
  {
    inputs: [],
    name: "base",
    outputs: [
      {
        internalType: "contract IPriceOracleV1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quote",
    outputs: [
      {
        internalType: "contract IPriceOracleV1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161058838038061058883398101604081905261002f916100b4565b80516001600160a01b0390811660805260208083018051831660a05260408051338152855185169381019390935290519092168183015290517f3928767a7b1aefe738102e15a05eb56cc29c394f05627cd33764d8d42f389ff79181900360600190a15061011c565b80516001600160a01b03811681146100af57600080fd5b919050565b6000604082840312156100c657600080fd5b604080519081016001600160401b03811182821017156100f657634e487b7160e01b600052604160045260246000fd5b60405261010283610098565b815261011060208401610098565b60208201529392505050565b60805160a05161043c61014c60003960008181609c015260db015260008181604b015261016c015261043c6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635001f3b514610046578063999b93af14610097578063a035b1fe146100be575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b6100c66100d4565b60405190815260200161008e565b60006102007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a035b1fe6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610144573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610168919061034f565b60017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a035b1fe6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f9919061034f565b9190610205565b905090565b600061021b84670de0b6b3a76400008585610225565b90505b9392505050565b600080610233868686610282565b9050600183600281111561024957610249610368565b14801561026657506000848061026157610261610397565b868809115b15610279576102766001826103c6565b90505b95945050505050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709858702925082811083820303915050806000036102da578382816102d0576102d0610397565b049250505061021e565b8084116102e657600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b60006020828403121561036157600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b80820180821115610400577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9291505056fea2646970667358221220c6274c800bdaf7512616ac48c59639cbd4ef7232574bfed0574e24d9d60aa6f364736f6c63430008110033";

type TwoPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TwoPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TwoPriceOracle__factory extends ContractFactory {
  constructor(...args: TwoPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    config_: TwoPriceOracleConfigStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TwoPriceOracle> {
    return super.deploy(config_, overrides || {}) as Promise<TwoPriceOracle>;
  }
  override getDeployTransaction(
    config_: TwoPriceOracleConfigStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(config_, overrides || {});
  }
  override attach(address: string): TwoPriceOracle {
    return super.attach(address) as TwoPriceOracle;
  }
  override connect(signer: Signer): TwoPriceOracle__factory {
    return super.connect(signer) as TwoPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TwoPriceOracleInterface {
    return new utils.Interface(_abi) as TwoPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TwoPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as TwoPriceOracle;
  }
}
