/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestReceiptOwner,
  TestReceiptOwnerInterface,
} from "../../../contracts/test/TestReceiptOwner";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "UnauthorizedTransfer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
    ],
    name: "authorizeReceiptTransfer",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IReceiptV1",
        name: "receipt_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "receiptInformation_",
        type: "bytes",
      },
    ],
    name: "ownerBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IReceiptV1",
        name: "receipt_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "ownerMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IReceiptV1",
        name: "receipt_",
        type: "address",
      },
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "ownerTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
    ],
    name: "setFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
    ],
    name: "setTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610765806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063891e3df811610050578063891e3df8146100f4578063b7c427a614610107578063f1437bd01461011a57600080fd5b80634abaf0fa1461007757806353bfa9201461008c57806377233e901461009f575b600080fd5b61008a6100853660046104dc565b61016f565b005b61008a61009a366004610563565b610203565b61008a6100ad3660046105d9565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61008a6101023660046105fd565b610294565b61008a610115366004610563565b610385565b61008a6101283660046105d9565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6040517fad5abbab00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87169063ad5abbab906101c9908890889088908890889060040161069a565b600060405180830381600087803b1580156101e357600080fd5b505af11580156101f7573d6000803e3d6000fd5b50505050505050505050565b6040517ffc1ae25500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86169063fc1ae2559061025b9087908790879087906004016106ea565b600060405180830381600087803b15801561027557600080fd5b505af1158015610289573d6000803e3d6000fd5b505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff83811691161461030d576040517fec2e80ea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8084166004830152821660248201526044015b60405180910390fd5b60015473ffffffffffffffffffffffffffffffffffffffff828116911614610381576040517fec2e80ea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808416600483015282166024820152604401610304565b5050565b6040517fce8af52e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86169063ce8af52e9061025b9087908790879087906004016106ea565b73ffffffffffffffffffffffffffffffffffffffff811681146103ff57600080fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261044257600080fd5b813567ffffffffffffffff8082111561045d5761045d610402565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156104a3576104a3610402565b816040528381528660208588010111156104bc57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c087890312156104f557600080fd5b8635610500816103dd565b95506020870135610510816103dd565b94506040870135610520816103dd565b9350606087013592506080870135915060a087013567ffffffffffffffff81111561054a57600080fd5b61055689828a01610431565b9150509295509295509295565b600080600080600060a0868803121561057b57600080fd5b8535610586816103dd565b94506020860135610596816103dd565b93506040860135925060608601359150608086013567ffffffffffffffff8111156105c057600080fd5b6105cc88828901610431565b9150509295509295909350565b6000602082840312156105eb57600080fd5b81356105f6816103dd565b9392505050565b6000806040838503121561061057600080fd5b823561061b816103dd565b9150602083013561062b816103dd565b809150509250929050565b6000815180845260005b8181101561065c57602081850181015186830182015201610640565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a060808301526106df60a0830184610636565b979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff851681528360208201528260408201526080606082015260006107256080830184610636565b969550505050505056fea2646970667358221220f1cacceec3b388ad2502e92402e222f9ead91953dafe640acaf0dba67636336b64736f6c63430008110033";

type TestReceiptOwnerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestReceiptOwnerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestReceiptOwner__factory extends ContractFactory {
  constructor(...args: TestReceiptOwnerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestReceiptOwner> {
    return super.deploy(overrides || {}) as Promise<TestReceiptOwner>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestReceiptOwner {
    return super.attach(address) as TestReceiptOwner;
  }
  override connect(signer: Signer): TestReceiptOwner__factory {
    return super.connect(signer) as TestReceiptOwner__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestReceiptOwnerInterface {
    return new utils.Interface(_abi) as TestReceiptOwnerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestReceiptOwner {
    return new Contract(address, _abi, signerOrProvider) as TestReceiptOwner;
  }
}
