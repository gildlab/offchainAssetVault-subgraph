/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC20PriceOracleReceiptVaultFactory,
  ERC20PriceOracleReceiptVaultFactoryInterface,
  ReceiptVaultFactoryConfigStruct,
} from "../../../../contracts/vault/priceOracle/ERC20PriceOracleReceiptVaultFactory";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "implementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiptFactory",
            type: "address",
          },
        ],
        internalType: "struct ReceiptVaultFactoryConfig",
        name: "config_",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "child",
        type: "address",
      },
    ],
    name: "DuplicateChild",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroReceiptFactory",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "implementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiptFactory",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct ReceiptVaultFactoryConfig",
        name: "config",
        type: "tuple",
      },
    ],
    name: "Construction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Implementation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "child",
        type: "address",
      },
    ],
    name: "NewChild",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "createChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "priceOracle",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
            ],
            internalType: "struct VaultConfig",
            name: "vaultConfig",
            type: "tuple",
          },
        ],
        internalType: "struct ERC20PriceOracleVaultConfig",
        name: "erc20PriceOracleVaultConfig_",
        type: "tuple",
      },
    ],
    name: "createChildTyped",
    outputs: [
      {
        internalType: "contract ERC20PriceOracleReceiptVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maybeChild_",
        type: "address",
      },
    ],
    name: "isChild",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiptFactory",
    outputs: [
      {
        internalType: "contract ReceiptFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610f14380380610f1483398101604081905261002f91610219565b8061003861013d565b80516001600160a01b031661006057604051634208d2eb60e01b815260040160405180910390fd5b60208101516001600160a01b031661008b576040516310eb9aa360e11b815260040160405180910390fd5b80516001600160a01b03908116608052602080830151821660a05282516040805133815291909316918101919091527f7fac34ecf0b1b374cd9659e3d17db602659d53f1162b1f20142e6c02694aed70910160405180910390a16040805133815282516001600160a01b03908116602080840191909152840151168183015290517f3928767a7b1aefe738102e15a05eb56cc29c394f05627cd33764d8d42f389ff79181900360600190a15050610281565b600054610100900460ff16156101a95760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156101fb576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b80516001600160a01b038116811461021457600080fd5b919050565b60006040828403121561022b57600080fd5b604080519081016001600160401b038111828210171561025b57634e487b7160e01b600052604160045260246000fd5b604052610267836101fd565b8152610275602084016101fd565b60208201529392505050565b60805160a051610c626102b26000396000818160ae015261051c01526000818160e801526103440152610c626000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80632ea72a49116100505780632ea72a49146100d05780635c60da1b146100e3578063fc91a8971461010a57600080fd5b80630c285e5a1461006c57806324da4bf7146100a9575b600080fd5b61007f61007a366004610858565b610153565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61007f7f000000000000000000000000000000000000000000000000000000000000000081565b61007f6100de36600461093d565b610183565b61007f7f000000000000000000000000000000000000000000000000000000000000000081565b61014361011836600461098e565b73ffffffffffffffffffffffffffffffffffffffff1660009081526033602052604090205460ff1690565b60405190151581526020016100a0565b600061017d826040516020016101699190610aab565b604051602081830303815290604052610183565b92915050565b600061018d6102b1565b600061019883610324565b73ffffffffffffffffffffffffffffffffffffffff811660009081526033602052604090205490915060ff1615610218576040517fd23867da00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526033602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558151338152908101929092527f7da70c4e5387d7038610b79ca7d304caaef815826e51e67cf247135387a79bce910160405180910390a190506102ac60018055565b919050565b60026001540361031d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161020f565b6002600155565b6000808280602001905181019061033b9190610b03565b905060006103687f0000000000000000000000000000000000000000000000000000000000000000610418565b90508073ffffffffffffffffffffffffffffffffffffffff16635e3809d56040518060400160405280856000015173ffffffffffffffffffffffffffffffffffffffff1681526020016103bf8587602001516104db565b8152506040518263ffffffff1660e01b81526004016103de9190610bd4565b600060405180830381600087803b1580156103f857600080fd5b505af115801561040c573d6000803e3d6000fd5b50929695505050505050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f0905073ffffffffffffffffffffffffffffffffffffffff81166102ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f455243313136373a20637265617465206661696c656400000000000000000000604482015260640161020f565b6104e3610657565b6040517f2ea72a4900000000000000000000000000000000000000000000000000000000815260206004820152600060248201819052907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632ea72a49906044016020604051808303816000875af115801561057a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059e9190610c0f565b6040517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301529192509082169063f2fde38b90602401600060405180830381600087803b15801561060b57600080fd5b505af115801561061f573d6000803e3d6000fd5b5050505060405180604001604052808273ffffffffffffffffffffffffffffffffffffffff1681526020018481525091505092915050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016106b96040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b905290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610710576107106106be565b60405290565b6040516060810167ffffffffffffffff81118282101715610710576107106106be565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610780576107806106be565b604052919050565b73ffffffffffffffffffffffffffffffffffffffff811681146107aa57600080fd5b50565b600067ffffffffffffffff8211156107c7576107c76106be565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000610806610801846107ad565b610739565b905082815283838301111561081a57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261084257600080fd5b610851838335602085016107f3565b9392505050565b60006020828403121561086a57600080fd5b813567ffffffffffffffff8082111561088257600080fd5b908301906040828603121561089657600080fd5b61089e6106ed565b82356108a981610788565b81526020830135828111156108bd57600080fd5b9290920191606083870312156108d257600080fd5b6108da610716565b83356108e581610788565b81526020840135838111156108f957600080fd5b61090588828701610831565b60208301525060408401358381111561091d57600080fd5b61092988828701610831565b604083015250602082015295945050505050565b60006020828403121561094f57600080fd5b813567ffffffffffffffff81111561096657600080fd5b8201601f8101841361097757600080fd5b610986848235602084016107f3565b949350505050565b6000602082840312156109a057600080fd5b813561085181610788565b60005b838110156109c65781810151838201526020016109ae565b50506000910152565b600081518084526109e78160208601602086016109ab565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff80835116845260208301516040602086015281815116604086015260208101519150606080860152610a6560a08601836109cf565b9150604081015190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0858303016080860152610aa282826109cf565b95945050505050565b6020815260006108516020830184610a19565b600082601f830112610acf57600080fd5b8151610add610801826107ad565b818152846020838601011115610af257600080fd5b6109868260208301602087016109ab565b600060208284031215610b1557600080fd5b815167ffffffffffffffff80821115610b2d57600080fd5b9083019060408286031215610b4157600080fd5b610b496106ed565b8251610b5481610788565b8152602083015182811115610b6857600080fd5b929092019160608387031215610b7d57600080fd5b610b85610716565b8351610b9081610788565b8152602084015183811115610ba457600080fd5b610bb088828701610abe565b602083015250604084015183811115610bc857600080fd5b61092988828701610abe565b6020815273ffffffffffffffffffffffffffffffffffffffff8251166020820152600060208301516040808401526109866060840182610a19565b600060208284031215610c2157600080fd5b81516108518161078856fea26469706673582212206498b65d1af3e84a612f5486f125737b9ba9568ebf25bb6cd3a9aa0ce571a55664736f6c63430008110033";

type ERC20PriceOracleReceiptVaultFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20PriceOracleReceiptVaultFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20PriceOracleReceiptVaultFactory__factory extends ContractFactory {
  constructor(...args: ERC20PriceOracleReceiptVaultFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    config_: ReceiptVaultFactoryConfigStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20PriceOracleReceiptVaultFactory> {
    return super.deploy(
      config_,
      overrides || {}
    ) as Promise<ERC20PriceOracleReceiptVaultFactory>;
  }
  override getDeployTransaction(
    config_: ReceiptVaultFactoryConfigStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(config_, overrides || {});
  }
  override attach(address: string): ERC20PriceOracleReceiptVaultFactory {
    return super.attach(address) as ERC20PriceOracleReceiptVaultFactory;
  }
  override connect(
    signer: Signer
  ): ERC20PriceOracleReceiptVaultFactory__factory {
    return super.connect(
      signer
    ) as ERC20PriceOracleReceiptVaultFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20PriceOracleReceiptVaultFactoryInterface {
    return new utils.Interface(
      _abi
    ) as ERC20PriceOracleReceiptVaultFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20PriceOracleReceiptVaultFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC20PriceOracleReceiptVaultFactory;
  }
}
