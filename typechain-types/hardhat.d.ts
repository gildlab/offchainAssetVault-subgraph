/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV3Interface__factory>;
    getContractFactory(
      name: "AccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlUpgradeable__factory>;
    getContractFactory(
      name: "IAccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlUpgradeable__factory>;
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "IERC4626Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4626Upgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ReentrancyGuardUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable__factory>;
    getContractFactory(
      name: "ERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Upgradeable__factory>;
    getContractFactory(
      name: "IERC1155MetadataURIUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Upgradeable__factory>;
    getContractFactory(
      name: "ERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Upgradeable__factory>;
    getContractFactory(
      name: "IERC20PermitUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20PermitUpgradeable__factory>;
    getContractFactory(
      name: "ERC20SnapshotUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20SnapshotUpgradeable__factory>;
    getContractFactory(
      name: "IERC20MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Upgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "MulticallUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MulticallUpgradeable__factory>;
    getContractFactory(
      name: "Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Factory__factory>;
    getContractFactory(
      name: "IFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFactory__factory>;
    getContractFactory(
      name: "ReadWriteTier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReadWriteTier__factory>;
    getContractFactory(
      name: "ITierV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITierV2__factory>;
    getContractFactory(
      name: "TierV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TierV2__factory>;
    getContractFactory(
      name: "ChainlinkFeedPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkFeedPriceOracle__factory>;
    getContractFactory(
      name: "ChainlinkFeedPriceOracleFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkFeedPriceOracleFactory__factory>;
    getContractFactory(
      name: "IPriceOracleV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceOracleV1__factory>;
    getContractFactory(
      name: "TwoPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TwoPriceOracle__factory>;
    getContractFactory(
      name: "TwoPriceOracleFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TwoPriceOracleFactory__factory>;
    getContractFactory(
      name: "MockChainlinkDataFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockChainlinkDataFeed__factory>;
    getContractFactory(
      name: "TestErc20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestErc20__factory>;
    getContractFactory(
      name: "TestReceipt",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestReceipt__factory>;
    getContractFactory(
      name: "TestReceiptOwner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestReceiptOwner__factory>;
    getContractFactory(
      name: "OffchainAssetReceiptVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OffchainAssetReceiptVault__factory>;
    getContractFactory(
      name: "OffchainAssetReceiptVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OffchainAssetReceiptVaultFactory__factory>;
    getContractFactory(
      name: "ERC20PriceOracleReceiptVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20PriceOracleReceiptVault__factory>;
    getContractFactory(
      name: "ERC20PriceOracleReceiptVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20PriceOracleReceiptVaultFactory__factory>;
    getContractFactory(
      name: "IReceiptOwnerV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IReceiptOwnerV1__factory>;
    getContractFactory(
      name: "IReceiptV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IReceiptV1__factory>;
    getContractFactory(
      name: "Receipt",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Receipt__factory>;
    getContractFactory(
      name: "ReceiptFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReceiptFactory__factory>;
    getContractFactory(
      name: "ReceiptVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReceiptVault__factory>;
    getContractFactory(
      name: "ReceiptVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReceiptVaultFactory__factory>;

    getContractAt(
      name: "AggregatorV3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV3Interface>;
    getContractAt(
      name: "AccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlUpgradeable>;
    getContractAt(
      name: "IAccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlUpgradeable>;
    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "IERC4626Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC4626Upgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ReentrancyGuardUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    getContractAt(
      name: "ERC1155Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Upgradeable>;
    getContractAt(
      name: "IERC1155MetadataURIUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable>;
    getContractAt(
      name: "IERC1155ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155ReceiverUpgradeable>;
    getContractAt(
      name: "IERC1155Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Upgradeable>;
    getContractAt(
      name: "ERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Upgradeable>;
    getContractAt(
      name: "IERC20PermitUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20PermitUpgradeable>;
    getContractAt(
      name: "ERC20SnapshotUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20SnapshotUpgradeable>;
    getContractAt(
      name: "IERC20MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20MetadataUpgradeable>;
    getContractAt(
      name: "IERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Upgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "MulticallUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MulticallUpgradeable>;
    getContractAt(
      name: "Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Factory>;
    getContractAt(
      name: "IFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFactory>;
    getContractAt(
      name: "ReadWriteTier",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReadWriteTier>;
    getContractAt(
      name: "ITierV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITierV2>;
    getContractAt(
      name: "TierV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TierV2>;
    getContractAt(
      name: "ChainlinkFeedPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkFeedPriceOracle>;
    getContractAt(
      name: "ChainlinkFeedPriceOracleFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkFeedPriceOracleFactory>;
    getContractAt(
      name: "IPriceOracleV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPriceOracleV1>;
    getContractAt(
      name: "TwoPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TwoPriceOracle>;
    getContractAt(
      name: "TwoPriceOracleFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TwoPriceOracleFactory>;
    getContractAt(
      name: "MockChainlinkDataFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockChainlinkDataFeed>;
    getContractAt(
      name: "TestErc20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestErc20>;
    getContractAt(
      name: "TestReceipt",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestReceipt>;
    getContractAt(
      name: "TestReceiptOwner",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestReceiptOwner>;
    getContractAt(
      name: "OffchainAssetReceiptVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OffchainAssetReceiptVault>;
    getContractAt(
      name: "OffchainAssetReceiptVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OffchainAssetReceiptVaultFactory>;
    getContractAt(
      name: "ERC20PriceOracleReceiptVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20PriceOracleReceiptVault>;
    getContractAt(
      name: "ERC20PriceOracleReceiptVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20PriceOracleReceiptVaultFactory>;
    getContractAt(
      name: "IReceiptOwnerV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IReceiptOwnerV1>;
    getContractAt(
      name: "IReceiptV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IReceiptV1>;
    getContractAt(
      name: "Receipt",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Receipt>;
    getContractAt(
      name: "ReceiptFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReceiptFactory>;
    getContractAt(
      name: "ReceiptVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReceiptVault>;
    getContractAt(
      name: "ReceiptVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReceiptVaultFactory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
